import simplegui
import random

WIDTH = 600
HEIGHT = 600

# load card sprite - 936x384 - source: jfitz.com
CARD_SIZE = (72, 96)
CARD_CENTER = (36, 48)
card_images = simplegui.load_image("http://storage.googleapis.com/codeskulptor-assets/cards_jfitz.png")

CARD_BACK_SIZE = (72, 96)
CARD_BACK_CENTER = (36, 48)
card_back = simplegui.load_image("http://storage.googleapis.com/codeskulptor-assets/card_jfitz_back.png")    

# define globals for cards
SUITS = ('C', 'S', 'H', 'D')
RANKS = ('A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K')
VALUES = {'A':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9, 'T':10, 'J':10, 'Q':10, 'K':10}

#other constants
in_play = False
outcome = "Hit or stand?"
score = 0

class Card:
    def __init__(self,suit,rank):
        if (rank in RANKS) and (suit in SUITS):
            self.rank =rank
            self.suit = suit
        else:
            self.rank = None
            self.suit = None

    def __str__(self):
        return self.suit + self.rank
    
    def get_rank(self):
        return self.rank
    
    def get_suit(self):
        return self.suit
    
    def draw(self,canvas,pos):
        card_center = [ CARD_CENTER[0] + CARD_SIZE[0]*RANKS.index(self.rank) , CARD_CENTER[1] + CARD_SIZE[1]*SUITS.index(self.suit)]        
        canvas.draw_image(card_images,
                         card_center,CARD_SIZE,
                          [pos[0] + CARD_CENTER[0],pos[1] + CARD_CENTER[1] ],CARD_SIZE)
        
class Hand:
    def __init__(self):
        self.list = []
        
    def add_card(self,card):
        self.list.append(card)
        
    def __str__(self):
        hand = ""
        for card in self.list:
            hand += str(card) + " "
        return hand      
           
    def draw(self,canvas,pos):
        for card in self.list:
            card.draw(canvas,pos)
            pos[0] += CARD_SIZE[0]

    def get_value(self):
        hand_value = 0
        no_of_aces = 0
        for card in self.list:
            if card.get_rank() == 'A':
                no_of_aces += 1
                hand_value += 1 
            else:
                hand_value += VALUES.get(card.get_rank())
        if no_of_aces >= 1 and (hand_value + 10) <= 21:
            return hand_value + 10
        else: return hand_value
        
                
        
class Deck:
    def __init__(self):
        self.deck = []
        for rank in RANKS:
            for suit in SUITS:
                self.deck.append( Card( str(suit) , str(rank)) )
               
                
    def shuffle(self):
        random.shuffle(self.deck)
        
    def deal_card(self):
        self.card = self.deck[0]
        self.deck.remove(self.card)
        return self.card
        
    
            
def deal():
    global player_hand,dealer_hand,my_deck,in_play,score,outcome
    if in_play:
        score -= 1
    my_deck = Deck()
    player_hand = Hand()
    dealer_hand = Hand()
    my_deck.shuffle()
    player_hand.add_card(my_deck.deal_card())
    player_hand.add_card(my_deck.deal_card())
    dealer_hand.add_card(my_deck.deal_card())
    dealer_hand.add_card(my_deck.deal_card())
    in_play = True
    outcome = "Hit or stand?"
    
def hit():
    global player_hand,my_deck,in_play,score,outcome
    if player_hand.get_value() < 21:
        player_hand.add_card(my_deck.deal_card())
    if player_hand.get_value() > 21:
        in_play = False
        score -= 1
        outcome = "You have busted.New Deal!"

def stand():
    global player_hand,dealer_hand,my_deck,in_play,score,outcome
    in_play = False
    if player_hand.get_value() > 21:
        outcome = "You have busted!.New Deal?"
        score -= 1
    else:
        while dealer_hand.get_value() < 17:
            dealer_hand.add_card(my_deck.deal_card())
        if dealer_hand.get_value() > 21:
            outcome = "The dealer got busted!. New deal?"            
            score += 1
        elif dealer_hand.get_value() >= player_hand.get_value():
            outcome = "The dealer wins!. New deal?"
            score -= 1
        else:
            outcome = "You win!. New Deal?"
            score += 1
            
def draw(canvas):
    #printing the cards 
    player_hand.draw(canvas,[0,300])
    dealer_hand.draw(canvas, [0,100])
    
    #labels
    canvas.draw_text("BLACKJACK",[210,50],35,"white")
    canvas.draw_text(outcome,[25,70],20,"white")
    canvas.draw_text("score = "+str(score),[480,70],25,"white")  
    if in_play:
        canvas.draw_image(card_back, CARD_BACK_CENTER, CARD_BACK_SIZE, [0 + CARD_BACK_CENTER[0], 100 + CARD_BACK_CENTER[1]], CARD_SIZE)    
        


frame = simplegui.create_frame("Blackjack",WIDTH,HEIGHT)
frame.set_draw_handler(draw)
frame.add_button("DEAL",deal,150)
frame.add_button("HIT",hit,150)
frame.add_button("STAND",stand,150)

#starts the game
deal()

frame.start()